package org.campagnelab.hta.tables.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class FutureTable_Constraints extends BaseConstraintsDescriptor {
  public FutureTable_Constraints() {
    super("org.campagnelab.hta.tables.structure.FutureTable");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("name", new BasePropertyConstraintsDescriptor("name", this) {
      @Override
      public boolean hasOwnSetter() {
        return true;
      }

      @Override
      public void setValue(SNode node, String propertyValue) {
        String propertyName = "name";
        if ((SLinkOperations.getTarget(node, "table", false) != null)) {
          SPropertyOperations.set(SLinkOperations.getTarget(node, "table", false), "name", (SPropertyOperations.getString(propertyValue)));
        }
        SPropertyOperations.set(node, "name", (SPropertyOperations.getString(propertyValue)));
      }
    });
    return properties;
  }
}
