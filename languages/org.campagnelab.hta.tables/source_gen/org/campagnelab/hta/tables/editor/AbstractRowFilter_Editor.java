package org.campagnelab.hta.tables.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ReplaceNode_CustomNodeConcept;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.RefNodeCellProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;

public class AbstractRowFilter_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_4hi9ny_a(editorContext, node);
  }

  private EditorCell createCollection_4hi9ny_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_4hi9ny_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createComponent_4hi9ny_a0(editorContext, node));
    editorCell.addEditorCell(this.createComponent_4hi9ny_b0(editorContext, node));
    if (renderingCondition_4hi9ny_a2a(node, editorContext)) {
      editorCell.addEditorCell(this.createCollection_4hi9ny_c0(editorContext, node));
    }
    return editorCell;
  }

  private EditorCell createComponent_4hi9ny_a0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "jetbrains.mps.lang.core.editor.alias");
    Style style = new StyleImpl();
    style.set(StyleAttributes.EDITABLE, true);
    editorCell.getStyle().putAll(style);
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPartExt[]{new AbstractRowFilter_Editor.ReplaceWith_AbstractRowFilter_cellMenu_4hi9ny_a0a0()}));
    return editorCell;
  }

  public static class ReplaceWith_AbstractRowFilter_cellMenu_4hi9ny_a0a0 extends AbstractCellMenuPart_ReplaceNode_CustomNodeConcept {
    public ReplaceWith_AbstractRowFilter_cellMenu_4hi9ny_a0a0() {
    }

    public String getReplacementConceptName() {
      return "org.campagnelab.hta.tables.structure.AbstractRowFilter";
    }
  }

  private EditorCell createComponent_4hi9ny_b0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = editorContext.getCellFactory().createEditorComponentCell(node, "org.campagnelab.hta.tables.editor.AbstractRowFilterEditorComponent");
    return editorCell;
  }

  private EditorCell createCollection_4hi9ny_c0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_4hi9ny_c0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.SELECTABLE, false);
    editorCell.getStyle().putAll(style);
    editorCell.addEditorCell(this.createRefNode_4hi9ny_a2a(editorContext, node));
    return editorCell;
  }

  private static boolean renderingCondition_4hi9ny_a2a(SNode node, EditorContext editorContext) {
    return (SLinkOperations.getTarget(node, "priorFilter", true) != null);
  }

  private EditorCell createRefNode_4hi9ny_a2a(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);
    provider.setRole("priorFilter");
    provider.setNoTargetText("<no priorFilter>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    if (editorCell.getRole() == null) {
      editorCell.setRole("priorFilter");
    }
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }
}
