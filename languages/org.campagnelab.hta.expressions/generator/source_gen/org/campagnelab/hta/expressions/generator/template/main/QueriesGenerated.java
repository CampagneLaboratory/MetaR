package org.campagnelab.hta.expressions.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.campagnelab.hta.tables.generationhelpers.NameHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IterableUtils;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;

  public static Object propertyMacro_GetPropertyValue_7783277237109900194(final PropertyMacroContext _context) {
    return BehaviorReflection.invokeVirtual(String.class, _context.getNode(), "virtual_getPresentation_1213877396640", new Object[]{});
  }

  public static Object propertyMacro_GetPropertyValue_7783277237109521443(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "value");
  }

  public static Object propertyMacro_GetPropertyValue_7783277237109724852(final PropertyMacroContext _context) {
    return NameHelper.RName(SPropertyOperations.getString(SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(), "column", false), "org.campagnelab.hta.tables.structure.Table", false, false), "name")) + "$" + SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "column", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_7783277237109802082(final PropertyMacroContext _context) {
    return IterableUtils.join(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "phrases", true)).select(new ISelector<SNode, String>() {
      public String select(SNode it) {
        return SPropertyOperations.getString(it, "text");
      }
    }), "");
  }

  public static SNode sourceNodeQuery_7783277237109899947(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "leftExpression", true);
  }

  public static SNode sourceNodeQuery_7783277237109899697(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "rightExpression", true);
  }
}
