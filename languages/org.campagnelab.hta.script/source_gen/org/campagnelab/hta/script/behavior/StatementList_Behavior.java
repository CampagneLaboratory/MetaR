package org.campagnelab.hta.script.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.scope.CompositeScope;
import jetbrains.mps.lang.scopes.runtime.ScopeUtils;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class StatementList_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Scope virtual_getScope_3734116213129936182(SNode thisNode, SNode kind, SNode child) {

    if (kind == SConceptOperations.findConceptDeclaration("org.campagnelab.hta.tables.structure.FutureTable")) {
      List<SNode> descendants = SNodeOperations.getDescendants(thisNode, null, false, new String[]{});
      final int myIndex = descendants.indexOf(child);
      Iterable<SNode> before = ListSequence.fromList(descendants).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.getIndexInParent(it) < myIndex && SNodeOperations.isInstanceOf(it, "org.campagnelab.hta.tables.structure.FutureTable");
        }
      });
      return CompositeScope.createComposite(ScopeUtils.lazyParentScope(thisNode, kind), ListScope.forNamedElements(before));
    }
    return ScopeUtils.lazyParentScope(thisNode, kind);
  }

  public static Scope virtual_getScope_7722139651431880752(SNode thisNode, SNode kind, String role, int index) {
    return BehaviorReflection.invokeSuper(Scope.class, thisNode, "jetbrains.mps.lang.core.structure.ScopeProvider", "virtual_getScope_7722139651431880752", new Object[]{kind, role, index});
  }

  public static Iterable<SNode> virtual_dependencies_7074867102589608499(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "transformations", true)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), it, "virtual_dependencies_7074867102588635969", new Object[]{});
      }
    });
  }

  @Deprecated
  public static Iterable<SNode> call_dependencies_7074867102589608499(SNode thisNode) {
    return BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), thisNode, "virtual_dependencies_7074867102589608499", new Object[]{});
  }

  @Deprecated
  public static Iterable<SNode> callSuper_dependencies_7074867102589608499(SNode thisNode, String callerConceptFqName) {
    return BehaviorManager.getInstance().invokeSuper((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.cast(thisNode, "org.campagnelab.hta.script.structure.StatementList"), callerConceptFqName, "virtual_dependencies_7074867102589608499", new Class[]{SNode.class}, new Object[]{});
  }
}
